name: TensorFlow Layer Tests

on:
  workflow_call:
    inputs:
      runner:
        description: 'Machine on which the tests would run'
        type: string
        required: true
      container:
        description: 'JSON to be converted to the value of the "container" configuration for the job'
        type: string
        required: false
        default: '{"image": null}'
      affected-components:
        description: 'Components that are affected by changes in the commit defined by the Smart CI Action'
        type: string
        required: true
      python-version:
        description: 'Python version to setup. E.g., "3.11"'
        type: string
        required: true

permissions: read-all

env:
  PIP_CACHE_PATH_LINUX: /mount/caches/pip/linux
  PIP_CACHE_PATH_WIN: "C:\\mount\\caches\\pip\\win"

jobs:
  TensorFlow_Layer_Tests:
    name: TensorFlow Layer Tests
    timeout-minutes: 45
    runs-on: ${{ inputs.runner }}
    container: ${{ fromJSON(inputs.container) }}
    defaults:
      run:
        shell: ${{ contains(inputs.runner, 'win') && 'pwsh' || 'bash' }}
    env:
      DEBIAN_FRONTEND: noninteractive # to prevent apt-get from waiting user input
      OPENVINO_REPO: ${{ github.workspace }}/openvino
      INSTALL_DIR: ${{ github.workspace }}/install
      INSTALL_TEST_DIR: ${{ github.workspace }}/install/tests
      INSTALL_WHEELS_DIR: ${{ github.workspace }}/install/wheels
      LAYER_TESTS_INSTALL_DIR: ${{ github.workspace }}/install/tests/layer_tests
    steps:
      - name: Download OpenVINO artifacts (tarballs)
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: openvino_[tests]*
          path: ${{ env.INSTALL_DIR }}
          merge-multiple: true
          
      - name: Download OpenVINO artifacts (wheels)
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: openvino_[wheels|openvino_tokenizers]*
          path: ${{ env.INSTALL_WHEELS_DIR }}
          merge-multiple: true

      # Needed as ${{ github.workspace }} is not working correctly when using Docker
      - name: Setup Variables
        if: runner.os != 'Windows'
        run: |
          echo "OPENVINO_REPO=$GITHUB_WORKSPACE/openvino" >> "$GITHUB_ENV"
          echo "INSTALL_DIR=$GITHUB_WORKSPACE/install" >> "$GITHUB_ENV"
          echo "INSTALL_TEST_DIR=$GITHUB_WORKSPACE/install/tests" >> "$GITHUB_ENV"
          echo "LAYER_TESTS_INSTALL_DIR=$GITHUB_WORKSPACE/install/tests/layer_tests" >> "$GITHUB_ENV"

      - name: Install OpenVINO dependencies (mac)
        if: runner.os == 'macOS'
        run: brew install pigz
          
      - name: Extract OpenVINO packages (Linux, macOS)
        if: runner.os != 'Windows'
        run: |
            pigz -dc openvino_tests.tar.gz | tar -xf - -C ${INSTALL_DIR}
        working-directory: ${{ env.INSTALL_DIR }}

      - name: Extract OpenVINO artifacts (Windows)
        if: runner.os == 'Windows'
        run: |
            Expand-Archive openvino_tests.zip -DestinationPath ${{ env.INSTALL_DIR }}
        working-directory: ${{ env.INSTALL_DIR }}

      - name: Fetch setup_python action
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            .github/actions/setup_python/action.yml
          sparse-checkout-cone-mode: false
          path: 'openvino'

      - name: Setup Python ${{ inputs.python-version }}
        uses: ./openvino/.github/actions/setup_python
        with:
          version: ${{ inputs.python-version }}
          pip-cache-path: ${{ runner.os == 'Linux' && env.PIP_CACHE_PATH_LINUX || env.PIP_CACHE_PATH_WIN }}
          should-setup-pip-paths: ${{ runner.os != 'macOS' }}
          self-hosted-runner: ${{ runner.os != 'macOS' }}

      - name: Install OpenVINO Python wheels (Linux and macOS)
        if: runner.os != 'Windows'
        run: |
          # Install the core OV wheel
          python3 -m pip install ./openvino-*.whl

          # Install the core OV Tokenizers wheel
          python3 -m pip install ./openvino_tokenizers-*.whl
        working-directory: ${{ env.INSTALL_WHEELS_DIR }}

      - name: Install OpenVINO Python wheels (Windows)
        if: runner.os == 'Windows'
        run: |
          # Find and install the core OV wheel
          $ovCoreWheelPath=Get-ChildItem -Path . -Filter openvino-*.whl | % { $_.FullName }
          python3 -m pip install "$ovCoreWheelPath"

          # Find and install the core OV Tokenizers wheel
          $ovCoreWheelPath=Get-ChildItem -Path . -Filter openvino_tokenizers-*.whl | % { $_.FullName }
          python3 -m pip install "$ovCoreWheelPath"
        working-directory: ${{ env.INSTALL_WHEELS_DIR }}

      - name: Install Python Layer tests dependencies
        run: |
          # tensorflow test requirements
          python3 -m pip install -r ${{ env.INSTALL_TEST_DIR }}/requirements_tensorflow

      - name: TensorFlow 1 Layer Tests - TF FE
        if: fromJSON(inputs.affected-components).TF_FE.test
        run: |
          python3 -m pytest ${{ env.LAYER_TESTS_INSTALL_DIR }}/tensorflow_tests/ -n logical -m precommit  --junitxml=${{ env.INSTALL_TEST_DIR }}/TEST-tf_fe.xml
        env:
          TEST_DEVICE: CPU
          TEST_PRECISION: FP16

      - name: TensorFlow 2 Layer Tests - TF FE
        if: fromJSON(inputs.affected-components).TF_FE.test && runner.os != 'macOS' # Ticket: 123322
        run: |
          python3 -m pytest ${{ env.LAYER_TESTS_INSTALL_DIR }}/tensorflow2_keras_tests/ -n logical -m precommit --junitxml=${{ env.INSTALL_TEST_DIR }}/TEST-tf2_fe.xml
        env:
          TEST_DEVICE: CPU
          TEST_PRECISION: FP16

      - name: JAX Layer Tests - TF FE
        # JAX single layer models converted via TF FE
        if: ${{ fromJSON(inputs.affected-components).TF_FE.test && runner.arch != 'ARM64' && runner.os != 'macOS' }}
        run: python3 -m pytest ${{ env.LAYER_TESTS_INSTALL_DIR }}/jax_tests/ -n logical -m precommit --junitxml=${{ env.INSTALL_TEST_DIR }}/TEST-jax.xml
        env:
          TEST_DEVICE: CPU
          TEST_PRECISION: FP16

      - name: Upload Test Results
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        if: ${{ !cancelled() }}
        with:
          name: test-results-python-tf-layers
          path: |
            ${{ env.INSTALL_TEST_DIR }}/TEST*.html
            ${{ env.INSTALL_TEST_DIR }}/TEST*.xml
          if-no-files-found: 'warn'
