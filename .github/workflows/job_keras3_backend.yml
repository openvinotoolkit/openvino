name: Keras 3 OpenVINO Backend

on:
  workflow_call:
    inputs:
      runner:
        description: 'Machine on which the tests would run'
        type: string
        required: true
      image:
        description: 'Docker image to use for the job'
        type: string
        required: false
        default: null
      python-version:
        description: 'Python version to setup. E.g., "3.11"'
        type: string
        required: true

permissions: read-all

env:
  PIP_CACHE_PATH_LINUX: /mount/caches/pip/linux
  PIP_CACHE_PATH_WIN: "C:\\mount\\caches\\pip\\win"

jobs:
  Keras3_OpenVINO_Backend:
    name: Keras 3 OpenVINO Backend
    timeout-minutes: 10
    defaults:
      run:
        shell: ${{ contains(inputs.runner, 'win') && 'pwsh' || 'bash' }}
    runs-on: ${{ inputs.runner }}
    container:
      image: ${{ inputs.image }}
      volumes:
        - /mount:/mount
        - ${{ github.workspace }}:${{ github.workspace }} # Needed as ${{ github.workspace }} is not working correctly when using Docker
    env:
      INSTALL_DIR: ${{ github.workspace }}/install
      INSTALL_TEST_DIR: ${{ github.workspace }}/install/tests
      KERAS_REPO: ${{ github.workspace }}/keras_repo
      KERAS_HOME: ${{ github.workspace }}/keras_repo/.github/workflows/config/openvino

    steps:
      # checkout action cleans up the workspace and have to be the first step
      - name: Fetch custom actions
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        timeout-minutes: 15
        with:
          sparse-checkout: |
            .github/actions
          sparse-checkout-cone-mode: false
          submodules: 'false'

      - name: Clone Keras 3 repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        timeout-minutes: 15
        with:
          repository: 'keras-team/keras'
          path: ${{ env.KERAS_REPO }}
          ref: 'master'

      - name: Download OpenVINO artifacts (wheels)
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: openvino_@(wheels|tokenizers_wheel)
          path: ${{ env.INSTALL_DIR }}
          merge-multiple: true

      - name: Setup Python ${{ inputs.python-version }}
        uses: ./.github/actions/setup_python
        with:
          version: ${{ inputs.python-version }}
          pip-cache-path: ${{ runner.os == 'Linux' && env.PIP_CACHE_PATH_LINUX || env.PIP_CACHE_PATH_WIN }}
          should-setup-pip-paths: ${{ runner.os != 'macOS' }}
          self-hosted-runner: ${{ runner.os != 'macOS' }}

      - name: Install OpenVINO Python wheels
        uses: ./.github/actions/install_ov_wheels
        with:
          wheels-dir-path: ${{ env.INSTALL_DIR }}
          wheels-to-install: 'openvino openvino_tokenizers'

      - name: Install test dependencies
        working-directory: ${{ env.KERAS_REPO }}
        run: |
          pip install -r requirements.txt --upgrade
          # make sure that no other keras is installed via pip
          pip uninstall -y keras keras-nightly
          # manually set keras
          echo "PYTHONPATH=$KERAS_REPO:$PYTHONPATH" >> "$GITHUB_ENV"

      - name: Test integrations
        working-directory: ${{ env.KERAS_REPO }}
        run: |
          python integration_tests/import_test.py --junitxml=${{ env.INSTALL_TEST_DIR }}/TEST-keras3_integration1.xml
          python integration_tests/numerical_test.py --junitxml=${{ env.INSTALL_TEST_DIR }}/TEST-keras3_integration2.xml

      - name: Test with pytest
        working-directory: ${{ env.KERAS_REPO }}
        run: |
          IGNORE_FILE="keras/src/backend/openvino/excluded_tests.txt"
          IGNORE_ARGS=$(awk '{print "--ignore=" $0}' "$IGNORE_FILE")
          pytest keras --ignore keras/src/applications $IGNORE_ARGS --junitxml=${{ env.INSTALL_TEST_DIR }}/TEST-keras3_pytest.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ !cancelled() }}
        with:
          name: test-results-keras3-backend
          path: |
            ${{ env.INSTALL_TEST_DIR }}/TEST*.html
            ${{ env.INSTALL_TEST_DIR }}/TEST*.xml
          if-no-files-found: 'warn'
