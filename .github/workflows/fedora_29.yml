name: Fedora 29 (RHEL 8.4), Python 3.9
on:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - 'releases/**'

concurrency:
  # github.ref is not unique in post-commit
  group: ${{ github.event_name == 'push' && github.run_id || github.ref }}-fedora-29
  cancel-in-progress: true

permissions: read-all

jobs:
  Smart_CI:
    runs-on: ubuntu-latest
    outputs:
      affected_components: "${{ steps.smart_ci.outputs.affected_components }}"
      changed_components: "${{ steps.smart_ci.outputs.changed_components }}"
      skip_workflow: "${{ steps.smart_ci.outputs.skip_workflow }}"
    steps:
      - name: checkout action
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: .github/actions/smart-ci

      - name: Get affected components
        id: smart_ci
        uses: ./.github/actions/smart-ci
        with:
          repository: ${{ github.repository }}
          pr: ${{ github.event.number }}
          commit_sha: ${{ github.sha }}
          ref_name: ${{ github.ref_name }}
          component_pattern: "category: (.*)"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          skip_when_only_listed_labels_set: 'docs'
          skip_when_only_listed_files_changed: '*.md,*.rst,*.png,*.jpg,*.svg,*/layer_tests_summary/*,*/conformance/*'

      - name: Show affected components
        run: |
          echo "${{ toJSON(steps.smart_ci.outputs.affected_components) }}"
        shell: bash

  Docker:
    needs: Smart_CI
    if: "!needs.smart_ci.outputs.skip_workflow"
    runs-on: aks-linux-4-cores-16gb-docker-build
    container:
      image: openvinogithubactions.azurecr.io/docker_build:0.2
      volumes:
        - /mount:/mount
    outputs:
      images: "${{ steps.handle_docker.outputs.images }}"
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ./.github/actions/handle_docker
        id: handle_docker
        with:
          images: |
            ov_build/fedora_29
            ov_test/fedora_33
          registry: 'openvinogithubactions.azurecr.io'
          dockerfiles_root_dir: '.github/dockerfiles'
          changed_components: ${{ needs.smart_ci.outputs.changed_components }}

  Build:
    needs: [Docker, Smart_CI]
    uses: ./.github/workflows/job_build_linux.yml
    with:
      runner: 'aks-linux-16-cores-32gb'
      container: '{"image": "${{ fromJSON(needs.docker.outputs.images).ov_build.fedora_29 }}", "volumes": ["/mount:/mount"], "options": "-e SCCACHE_AZURE_BLOB_CONTAINER -e SCCACHE_AZURE_CONNECTION_STRING"}'
      affected-components: ${{ needs.smart_ci.outputs.affected_components }}
      event-name: ${{ github.event_name }}
      os: 'fedora_29'
      build-contrib: false
      build-debian-packages: false
      build-js: false
      build-rpm-packages: true
      cmake-options: |- 
            -G "Ninja" \
            -DENABLE_CPPLINT=OFF \
            -DENABLE_NCC_STYLE=OFF \
            -DENABLE_INTEL_NPU=OFF \
            -DENABLE_TESTS=ON \
            -DENABLE_STRICT_DEPENDENCIES=OFF \
            -DENABLE_SYSTEM_OPENCL=ON \
            -DCPACK_GENERATOR=TGZ \
            -DCMAKE_COMPILE_WARNING_AS_ERROR=ON \
            -DCMAKE_BUILD_TYPE=Release

  RPM_Packages:
    name: RPM packages
    needs: [Docker, Build]
    timeout-minutes: 10
    defaults:
      run:
        shell: bash
    runs-on: aks-linux-4-cores-16gb
    container:
      image: ${{ fromJSON(needs.docker.outputs.images).ov_test.fedora_33 }}
    env:
      RPM_PACKAGES_DIR: /__w/openvino/packages/

    steps:
      - name: Download OpenVINO RPM packages
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: openvino_rpm_packages
          path: ${{ env.RPM_PACKAGES_DIR }}

      - name: Install RPM packages & check conflicts
        run: |
          tee > /tmp/openvino-2023.repo << EOF
          [OpenVINO]
          name=Intel(R) Distribution of OpenVINO 2023
          baseurl=https://yum.repos.intel.com/openvino/2023
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          EOF

          # install previous release version
          mv /tmp/openvino-2023.repo /etc/yum.repos.d
          yum install -y openvino

          # install current version
          yum install --allowerasing -y *.rpm
        working-directory: ${{ env.RPM_PACKAGES_DIR }}

      - name: Test RPM packages
        run: |
          /usr/share/openvino/samples/cpp/build_samples.sh
          /usr/share/openvino/samples/c/build_samples.sh
          ~/openvino_cpp_samples_build/intel64/Release/hello_query_device
          python3 /usr/share/openvino/samples/python/hello_query_device/hello_query_device.py
          python3 -c 'from openvino import Core; Core().get_property("CPU", "AVAILABLE_DEVICES")'
          python3 -c 'from openvino import Core; Core().get_property("GPU", "AVAILABLE_DEVICES")'
          python3 -c 'from openvino import Core; Core().get_property("AUTO", "SUPPORTED_PROPERTIES")'
          python3 -c 'from openvino import Core; Core().get_property("MULTI", "SUPPORTED_PROPERTIES")'
          python3 -c 'from openvino import Core; Core().get_property("HETERO", "SUPPORTED_PROPERTIES")'
          python3 -c 'from openvino import Core; Core().get_property("BATCH", "SUPPORTED_PROPERTIES")'
          python3 -c 'from openvino.frontend import FrontEndManager; assert len(FrontEndManager().get_available_front_ends()) == 6'
          benchmark_app --help
          opt_in_out --help
          ovc --help

  CXX_Unit_Tests:
    name: C++ unit tests
    needs: [ Docker, Build, Smart_CI ]
    uses: ./.github/workflows/job_cxx_unit_tests.yml
    with:
      runner: 'aks-linux-4-cores-16gb'
      image: ${{ fromJSON(needs.docker.outputs.images).ov_build.fedora_29 }}
      affected-components: ${{ needs.smart_ci.outputs.affected_components }}
      os: 'fedora_29'
  
  Overall_Status:
    name: ci/gha_overall_status_fedora
    needs: [Smart_CI, Build, CXX_Unit_Tests, RPM_Packages]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check status of all jobs
        if: >-
          ${{
            contains(needs.*.result, 'failure') ||
            contains(needs.*.result, 'cancelled')
          }}
        run: exit 1
