name: 'Store artifacts'
description: 'Store given artifacts in a proper place on a shared drive'
inputs:
  artifacts:
    description: "Multi-line list of artifacts to store"
    required: true
  platform:
    description: "Platform for which to restore artifacts. Used if 'storage_dir' is not set"
    required: false
  storage_dir:
    description: "Subdirectory name for stored artifacts, same as product type. Optional if 'platform' argument is set"
    required: false
  storage_root:
    description: "Root path to place artifacts to"
    required: true
  event_name:
    description: "GitHub event name. If not set - taken from github context"
    required: false
  branch_name:
    description: "Target branch name. If not set - taken from github context"
    required: false
  trigger_repo_sha:
    description: "Commit hash of a trigger repo. If not set - taken from github context"
    required: false


outputs:
  artifacts_storage_path:
    description: "Path on a shared drive where the artifacts are stored"
    value: ${{ steps.store.outputs.artifacts_storage_path || steps.restore.outputs.artifacts_storage_path }}
  restored_artifacts_key:
    description: "Key under which the restored artifacts, if any, were uploaded to GitHub"
    value: ${{ steps.restore.outputs.restored_artifacts_key }}

runs:
  using: "composite"
  steps:
    - name: Install Python dependencies
      shell: ${{ runner.os == 'Windows' && 'pwsh' || 'bash' }}
      run: >-
        pip install -r ${{ env.ACTION_PATH }}/requirements.txt
      env:
        ACTION_PATH: ${{ runner.os == 'Windows' && '$env:GITHUB_ACTION_PATH' || '$GITHUB_ACTION_PATH' }}

    - name: Store artifacts
      id: store
      if: inputs.artifacts
      shell: ${{ runner.os == 'Windows' && 'pwsh' || 'bash' }}
      run: >-
        python3 ${{ env.ACTION_PATH }}/store_artifacts.py
        --storage_root "${{ inputs.storage_root }}"
        -a "${{ inputs.artifacts }}" 
        -s "${{ inputs.trigger_repo_sha || github.event.pull_request.head.sha || github.sha }}"
        ${{ inputs.storage_dir && env.STORAGE_PARAM || env.PLATFORM_PARAM }}
        ${{ inputs.branch_name && env.BRANCH_PARAM || '' }}
        ${{ inputs.event_name && env.EVENT_PARAM || '' }}
      env:
        ACTION_PATH: ${{ runner.os == 'Windows' && '$env:GITHUB_ACTION_PATH' || '$GITHUB_ACTION_PATH' }}
        BRANCH_PARAM: "-b ${{ inputs.branch_name }}"
        EVENT_PARAM: "-e ${{ inputs.event_name }}"
        STORAGE_PARAM: "--storage_dir ${{ inputs.storage_dir }}"
        PLATFORM_PARAM: "--platform ${{ inputs.platform }}"
        MERGE_QUEUE_BASE_REF: ""
