[project]
name = "openvino"
dynamic = ["version", "entry-points", "scripts"]
description = "OpenVINO(TM) Runtime"
readme = {file = "README.md", content-type="text/markdown"}
license = {text = "OSI Approved :: Apache Software License"}
authors = [
    { name = "OpenVINO Developers", email = "openvino@intel.com" },
]
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"

dependencies = [
    "numpy>=1.16.6,<2.2.0",
    "openvino-telemetry>=2023.2.1",
    "packaging"
]

[build-system]
requires = ["setuptools>=70,<=75", "wheel", "cmake"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
license-files = [
    "readme.txt", 
    "../../../LICENSE",
    "../../../licensing/runtime-third-party-programs.txt",
    "../../../licensing/onetbb_third-party-programs.txt",
    "../../../licensing/onednn_third-party-programs.txt",
]

[tool.black]
line-length = 160
include = '\.pyi?$'

[tool.cibuildwheel]
before-all = "uname -a"
build = "cp311*manylinux_x86_64*"
build-frontend = { name = "pip", args = ["--verbose", "--no-deps", "--extra-index-url=https://storage.openvinotoolkit.org/simple/wheels/nightly"] } 
environment = { http_proxy = "http://proxy-dmz.intel.com:911", https_proxy = "http://proxy-dmz.intel.com:912" }
repair-wheel-command = ""
archs = ["x86_64"]
build-verbosity = 1