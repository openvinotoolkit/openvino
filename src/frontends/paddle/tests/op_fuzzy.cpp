// Copyright (C) 2018-2024 Intel Corporation
// SPDX-License-Identifier: Apache-2.0
//

#include "op_fuzzy.hpp"

#include <fstream>

#include "common_test_utils/test_control.hpp"
#include "paddle_utils.hpp"

using namespace ov::frontend;

using PaddleFuzzyOpTest = FrontEndFuzzyOpTest;

static const std::vector<std::string> models{
    std::string("argmax/argmax.pdmodel"),
    std::string("argmax1/argmax1.pdmodel"),
    std::string("assign_none/assign_none.pdmodel"),
    std::string("assign_output/assign_output.pdmodel"),
    std::string("assign_value_boolean/assign_value_boolean.pdmodel"),
    std::string("assign_value_fp32/assign_value_fp32.pdmodel"),
    std::string("assign_value_int32/assign_value_int32.pdmodel"),
    std::string("assign_value_int64/assign_value_int64.pdmodel"),
    std::string("avgAdaptivePool2D_test1/avgAdaptivePool2D_test1.pdmodel"),
    std::string("avgPool_test1/avgPool_test1.pdmodel"),
    std::string("avgPool_test10/avgPool_test10.pdmodel"),
    std::string("avgPool_test11/avgPool_test11.pdmodel"),
    std::string("avgPool_test2/avgPool_test2.pdmodel"),
    std::string("avgPool_test3/avgPool_test3.pdmodel"),
    std::string("avgPool_test4/avgPool_test4.pdmodel"),
    std::string("avgPool_test5/avgPool_test5.pdmodel"),
    // avgPool_test6<nchw support is disabled now>,
    std::string("avgPool_test7/avgPool_test7.pdmodel"),
    std::string("avgPool_test8/avgPool_test8.pdmodel"),
    std::string("avgPool_test9/avgPool_test9.pdmodel"),
    std::string("avgAdaptivePool3D_test1/avgAdaptivePool3D_test1.pdmodel"),
    std::string("avgAdaptivePool3D_test2/avgAdaptivePool3D_test2.pdmodel"),
    std::string("avgAdaptivePool3D_test3/avgAdaptivePool3D_test3.pdmodel"),
    std::string("avgAdaptivePool3D_test4/avgAdaptivePool3D_test4.pdmodel"),
    std::string("avg3dPool_test1/avg3dPool_test1.pdmodel"),
    std::string("avg3dPool_test2/avg3dPool_test2.pdmodel"),
    std::string("avg3dPool_test3/avg3dPool_test3.pdmodel"),
    std::string("avg3dPool_test4/avg3dPool_test4.pdmodel"),
    std::string("avg3dPool_test5/avg3dPool_test5.pdmodel"),
    std::string("avg3dPool_test6/avg3dPool_test6.pdmodel"),
    std::string("avg3dPool_test7/avg3dPool_test7.pdmodel"),
    std::string("avg3dPool_test8/avg3dPool_test8.pdmodel"),
    std::string("avg3dPool_test9/avg3dPool_test9.pdmodel"),
    std::string("avg3dPool_test10/avg3dPool_test10.pdmodel"),
    std::string("batch_norm_nchw/batch_norm_nchw.pdmodel"),
    std::string("batch_norm_nhwc/batch_norm_nhwc.pdmodel"),
    std::string("bicubic_downsample_false_0/bicubic_downsample_false_0.pdmodel"),
    std::string("bicubic_downsample_false_1/bicubic_downsample_false_1.pdmodel"),
    std::string("bicubic_downsample_true_0/bicubic_downsample_true_0.pdmodel"),
    std::string("bicubic_upsample_false_0/bicubic_upsample_false_0.pdmodel"),
    std::string("bicubic_upsample_false_1/bicubic_upsample_false_1.pdmodel"),
    std::string("bicubic_upsample_scales/bicubic_upsample_scales.pdmodel"),
    std::string("bicubic_upsample_scales2/bicubic_upsample_scales2.pdmodel"),
    std::string("bicubic_upsample_true_0/bicubic_upsample_true_0.pdmodel"),
    std::string("bicubic_upsample_tensor_size/bicubic_upsample_tensor_size.pdmodel"),
    std::string("bilinear_downsample_false_0/bilinear_downsample_false_0.pdmodel"),
    std::string("bilinear_downsample_false_1/bilinear_downsample_false_1.pdmodel"),
    std::string("bilinear_downsample_true_0/bilinear_downsample_true_0.pdmodel"),
    std::string("bilinear_upsample_false_0/bilinear_upsample_false_0.pdmodel"),
    std::string("bilinear_upsample_false_1/bilinear_upsample_false_1.pdmodel"),
    std::string("bilinear_upsample_scales/bilinear_upsample_scales.pdmodel"),
    std::string("bilinear_upsample_scales2/bilinear_upsample_scales2.pdmodel"),
    std::string("bilinear_upsample_true_0/bilinear_upsample_true_0.pdmodel"),
    std::string("bilinear_upsample_tensor_size/bilinear_upsample_tensor_size.pdmodel"),
    std::string("bmm/bmm.pdmodel"),
    std::string("box_coder_1/box_coder_1.pdmodel"),
    std::string("box_coder_2/box_coder_2.pdmodel"),
    std::string("box_coder_3/box_coder_3.pdmodel"),
    std::string("ceil/ceil.pdmodel"),
    std::string("clip/clip.pdmodel"),
    // 95436: sporadic failure
    // could not support dynamic rank
    // std::string("conditional_block_const/conditional_block_const.pdmodel"),
    // std::string("conditional_block_const_2outputs/conditional_block_const_2outputs.pdmodel"),
    std::string("conditional_block_2inputs/conditional_block_2inputs.pdmodel"),
    std::string("conditional_block_2inputs_2outputs/conditional_block_2inputs_2outputs.pdmodel"),
    std::string("conditional_block_2inputs_dyn/conditional_block_2inputs_dyn.pdmodel"),
    std::string("conditional_block_2inputs_dyn_2outputs/conditional_block_2inputs_dyn_2outputs.pdmodel"),
    std::string("conditional_block_dyn_multiple_consumers/conditional_block_dyn_multiple_consumers.pdmodel"),
    std::string("conditional_block_dyn_multiple_blocks/conditional_block_dyn_multiple_blocks.pdmodel"),
    std::string("conditional_block_dyn_multiple_blocks2/conditional_block_dyn_multiple_blocks2.pdmodel"),
    //// TensorArray case
    //// Save model failed if update paddlepaddle to 2.4.0
    // std::string("conditional_block_concat/conditional_block_concat.pdmodel"),
    // std::string("conditional_block_concat_dyn/conditional_block_concat_dyn.pdmodel"),
    // std::string("conditional_block_concat_dyn_2axes/conditional_block_concat_dyn_2axes.pdmodel"),
    // std::string("conditional_block_conditional_block_concat/conditional_block_conditional_block_concat.pdmodel"),
    // std::string(
    //    "conditional_block_conditional_block_concat_dyn/conditional_block_conditional_block_concat_dyn.pdmodel"),
    // std::string("conditional_block_slice0/conditional_block_slice0.pdmodel"),
    // std::string("conditional_block_slice0_dyn/conditional_block_slice0_dyn.pdmodel"),
    // std::string("conditional_block_slice0_else/conditional_block_slice0_else.pdmodel"),
    // std::string("conditional_block_slice0_scaler/conditional_block_slice0_scaler.pdmodel"),
    // std::string("conditional_block_slice0_scaler_dyn/conditional_block_slice0_scaler_dyn.pdmodel"),
    //// std::string("conditional_block_slice0_axis2/conditional_block_slice0_axis2.pdmodel"),   // No such case in
    //// model, as paddle.concat always concat along axis 0.
    //// std::string("conditional_block_slice0_axis2_dyn/conditional_block_slice0_axis2_dyn.pdmodel"),
    //// std::string("conditional_block_slice0_axis1_axis2/conditional_block_slice0_axis1_axis2.pdmodel"),
    //// std::string("conditional_block_slice0_axis1_axis2_dyn/conditional_block_slice0_axis1_axis2_dyn.pdmodel"),
    // std::string("conditional_block_concat_false/conditional_block_concat_false.pdmodel"),
    // std::string("conditional_block_concat_false_dyn/conditional_block_concat_false_dyn.pdmodel"),
    // std::string("conditional_block_slice0_2tensorarrays/conditional_block_slice0_2tensorarrays.pdmodel"),
    // std::string("conditional_block_slice0_2tensorarrays_dyn/conditional_block_slice0_2tensorarrays_dyn.pdmodel"),
    // std::string("conditional_block_slice0_2tensorarrays_extra/conditional_block_slice0_2tensorarrays_extra.pdmodel"),
    // std::string(
    //    "conditional_block_slice0_2tensorarrays_extra_dyn/conditional_block_slice0_2tensorarrays_extra_dyn.pdmodel"),
    std::string("conv2d_dilation_assymetric_pads_strides/conv2d_dilation_assymetric_pads_strides.pdmodel"),
    std::string("conv2d_SAME_padding/conv2d_SAME_padding.pdmodel"),
    std::string("conv2d_strides_assymetric_padding/conv2d_strides_assymetric_padding.pdmodel"),
    std::string("conv2d_strides_no_padding/conv2d_strides_no_padding.pdmodel"),
    std::string("conv2d_strides_padding/conv2d_strides_padding.pdmodel"),
    std::string(
        "conv2d_transpose_dilation_assymetric_pads_strides/conv2d_transpose_dilation_assymetric_pads_strides.pdmodel"),
    // conv2d_transpose_SAME_padding(Paddle outputs wrong results),
    std::string("conv2d_transpose_strides_assymetric_padding/conv2d_transpose_strides_assymetric_padding.pdmodel"),
    std::string("conv2d_transpose_strides_no_padding/conv2d_transpose_strides_no_padding.pdmodel"),
    std::string("conv2d_transpose_strides_padding/conv2d_transpose_strides_padding.pdmodel"),
    std::string("conv2d_transpose_VALID_padding/conv2d_transpose_VALID_padding.pdmodel"),
    std::string("conv2d_VALID_padding/conv2d_VALID_padding.pdmodel"),
    std::string("cos/cos.pdmodel"),
    std::string("cumsum/cumsum.pdmodel"),
    std::string("cumsum_i32/cumsum_i32.pdmodel"),
    std::string("cumsum_i64/cumsum_i64.pdmodel"),
    std::string("cumsum_f32/cumsum_f32.pdmodel"),
    std::string("cumsum_f64/cumsum_f64.pdmodel"),
    std::string("deformable_conv_default/deformable_conv_default.pdmodel"),
    std::string("deformable_conv_with_bias/deformable_conv_with_bias.pdmodel"),
    std::string("deformable_conv_with_deformable_groups/deformable_conv_with_deformable_groups.pdmodel"),
    std::string("deformable_conv_with_dilation/deformable_conv_with_dilation.pdmodel"),
    std::string("deformable_conv_with_dilation_list/deformable_conv_with_dilation_list.pdmodel"),
    std::string("deformable_conv_with_dilation_tuple/deformable_conv_with_dilation_tuple.pdmodel"),
    std::string("deformable_conv_with_groups/deformable_conv_with_groups.pdmodel"),
    // (CVS-86585: about e-5 level accuracy diff)
    // std::string("deformable_conv_with_mask/deformable_conv_with_mask.pdmodel"),
    // std::string("deformable_conv_with_mask_bias/deformable_conv_with_mask_bias.pdmodel"),
    std::string("deformable_conv_with_pad/deformable_conv_with_pad.pdmodel"),
    std::string("deformable_conv_with_pad_list/deformable_conv_with_pad_list.pdmodel"),
    std::string("deformable_conv_with_pad_tuple/deformable_conv_with_pad_tuple.pdmodel"),
    std::string("deformable_conv_with_stride/deformable_conv_with_stride.pdmodel"),
    std::string("deformable_conv_with_stride_list/deformable_conv_with_stride_list.pdmodel"),
    std::string("deformable_conv_with_stride_tuple/deformable_conv_with_stride_tuple.pdmodel"),
    std::string("depthwise_conv2d_convolution/depthwise_conv2d_convolution.pdmodel"),
    std::string("depthwise_conv2d_transpose_convolution/depthwise_conv2d_transpose_convolution.pdmodel"),
    std::string("dropout/dropout.pdmodel"),
    std::string("dropout_upscale_in_train/dropout_upscale_in_train.pdmodel"),
    std::string("elementwise_add1/elementwise_add1.pdmodel"),
    std::string("elementwise_div1/elementwise_div1.pdmodel"),
    std::string("elementwise_max1/elementwise_max1.pdmodel"),
    std::string("elementwise_min1/elementwise_min1.pdmodel"),
    std::string("elementwise_mod1/elementwise_mod1.pdmodel"),
    std::string("elementwise_mul1/elementwise_mul1.pdmodel"),
    std::string("elementwise_pow1/elementwise_pow1.pdmodel"),
    std::string("elementwise_sub1/elementwise_sub1.pdmodel"),
    std::string("elementwise_add2/elementwise_add2.pdmodel"),
    std::string("elementwise_div2/elementwise_div2.pdmodel"),
    std::string("elementwise_max2/elementwise_max2.pdmodel"),
    std::string("elementwise_min2/elementwise_min2.pdmodel"),
    std::string("elementwise_mod2/elementwise_mod2.pdmodel"),
    std::string("elementwise_mul2/elementwise_mul2.pdmodel"),
    std::string("elementwise_pow2/elementwise_pow2.pdmodel"),
    std::string("elementwise_sub2/elementwise_sub2.pdmodel"),
    std::string("elementwise_add3/elementwise_add3.pdmodel"),
    std::string("elementwise_div3/elementwise_div3.pdmodel"),
    std::string("elementwise_max3/elementwise_max3.pdmodel"),
    std::string("elementwise_min3/elementwise_min3.pdmodel"),
    std::string("elementwise_mod3/elementwise_mod3.pdmodel"),
    std::string("elementwise_mul3/elementwise_mul3.pdmodel"),
    std::string("elementwise_pow3/elementwise_pow3.pdmodel"),
    std::string("elementwise_sub3/elementwise_sub3.pdmodel"),
    std::string("elementwise_add4/elementwise_add4.pdmodel"),
    std::string("elementwise_div4/elementwise_div4.pdmodel"),
    std::string("elementwise_max4/elementwise_max4.pdmodel"),
    std::string("elementwise_min4/elementwise_min4.pdmodel"),
    std::string("elementwise_mod4/elementwise_mod4.pdmodel"),
    std::string("elementwise_mul4/elementwise_mul4.pdmodel"),
    std::string("elementwise_pow4/elementwise_pow4.pdmodel"),
    std::string("elementwise_sub4/elementwise_sub4.pdmodel"),
    std::string("elementwise_floordiv_int32_1/elementwise_floordiv_int32_1.pdmodel"),
    std::string("elementwise_floordiv_int32_2/elementwise_floordiv_int32_2.pdmodel"),
    std::string("elementwise_floordiv_int32_3/elementwise_floordiv_int32_3.pdmodel"),
    std::string("elementwise_floordiv_int64_1/elementwise_floordiv_int64_1.pdmodel"),
    std::string("elementwise_floordiv_int64_2/elementwise_floordiv_int64_2.pdmodel"),
    std::string("elementwise_floordiv_int64_3/elementwise_floordiv_int64_3.pdmodel"),
    std::string("elementwise_mul_bool1/elementwise_mul_bool1.pdmodel"),
    std::string("embedding_0/embedding_0.pdmodel"),
    std::string("embedding_sparse/embedding_sparse.pdmodel"),
    std::string("embedding_none_weight/embedding_none_weight.pdmodel"),
    std::string("embedding_paddings/embedding_paddings.pdmodel"),
    std::string("embedding_paddings_neg1/embedding_paddings_neg1.pdmodel"),
    std::string("embedding_tensorIds/embedding_tensorIds.pdmodel"),
    std::string("embedding_tensorIds_paddings/embedding_tensorIds_paddings.pdmodel"),
    std::string("equal/equal.pdmodel"),
    std::string("expand_v2/expand_v2.pdmodel"),
    std::string("expand_v2_tensor/expand_v2_tensor.pdmodel"),
    std::string("expand_v2_tensor_list/expand_v2_tensor_list.pdmodel"),
    std::string("expand_v2_tensor_list2/expand_v2_tensor_list2.pdmodel"),
    std::string("exp_test_float32/exp_test_float32.pdmodel"),
    std::string("flip_1/flip_1.pdmodel"),
    std::string("flip_2/flip_2.pdmodel"),
    std::string("flip_3/flip_3.pdmodel"),
    std::string("flip_4/flip_4.pdmodel"),
    std::string("flip_5/flip_5.pdmodel"),
    std::string("flip_dynamic_1/flip_dynamic_1.pdmodel"),
    std::string("flip_dynamic_2/flip_dynamic_2.pdmodel"),
    std::string("full_like/full_like.pdmodel"),
    std::string("full_like_f16/full_like_f16.pdmodel"),
    std::string("full_like_f32/full_like_f32.pdmodel"),
    std::string("full_like_f64/full_like_f64.pdmodel"),
    std::string("full_like_i16/full_like_i16.pdmodel"),
    std::string("full_like_i32/full_like_i32.pdmodel"),
    std::string("full_like_i64/full_like_i64.pdmodel"),
    std::string("full_like_bool/full_like_bool.pdmodel"),
    std::string("full_like_bool_2/full_like_bool_2.pdmodel"),
    std::string("full/full.pdmodel"),
    std::string("full_int32/full_int32.pdmodel"),
    std::string("full_int64/full_int64.pdmodel"),
    std::string("full_tensor/full_tensor.pdmodel"),
    std::string("full_shape_tensor/full_shape_tensor.pdmodel"),
    std::string("full_shape_tensor_list/full_shape_tensor_list.pdmodel"),
    std::string("flatten_contiguous_range_test1/flatten_contiguous_range_test1.pdmodel"),
    std::string("floor_float32/floor_float32.pdmodel"),
    std::string("floor_mod1/floor_mod1.pdmodel"),
    std::string("floor_mod2/floor_mod2.pdmodel"),
    std::string("gather_multi_dimension/gather_multi_dimension.pdmodel"),
    std::string("gather_one_dimension/gather_one_dimension.pdmodel"),
    std::string("gather_one_dimension2/gather_one_dimension2.pdmodel"),
    // gather_axis_input
    // (CVS-82724: not support Axis as input),
    std::string("gather_nd_float32/gather_nd_float32.pdmodel"),
    std::string("gather_nd_int64/gather_nd_int64.pdmodel"),
    std::string("gather_nd_int32/gather_nd_int32.pdmodel"),
    // Not support indices zero rank
    // std::string("gather_nd_empty/gather_nd_empty.pdmodel"),
    std::string("gather_nd_low_index/gather_nd_low_index.pdmodel"),
    std::string("gather_nd_high_rank1/gather_nd_high_rank1.pdmodel"),
    std::string("gather_nd_high_rank2/gather_nd_high_rank2.pdmodel"),
    std::string("gelu_erf/gelu_erf.pdmodel"),
    std::string("gelu_tanh/gelu_tanh.pdmodel"),
    std::string("generate_proposals_v2_0/generate_proposals_v2_0.pdmodel"),
    std::string("generate_proposals_v2_1/generate_proposals_v2_1.pdmodel"),
    std::string("generate_proposals_v2_2/generate_proposals_v2_2.pdmodel"),
    std::string("generate_proposals_v2_3/generate_proposals_v2_3.pdmodel"),
    std::string("generate_proposals_v2_4/generate_proposals_v2_4.pdmodel"),
    // ticket 130605: actual res value is not close
    // std::string("generate_proposals_v2_5/generate_proposals_v2_5.pdmodel"),
    // std::string("generate_proposals_v2_6/generate_proposals_v2_6.pdmodel"),
    // greater_equal_big_int64(failure due to CPU inference),
    std::string("greater_equal_big_int64/greater_equal_big_int64.pdmodel"),
    std::string("greater_equal_float32/greater_equal_float32.pdmodel"),
    std::string("greater_equal_int32/greater_equal_int32.pdmodel"),
    std::string("greater_equal_int64/greater_equal_int64.pdmodel"),
    std::string("greater_than_float32/greater_than_float32.pdmodel"),
    std::string("greater_than_int32/greater_than_int32.pdmodel"),
    std::string("greater_than_int64/greater_than_int64.pdmodel"),
    std::string("grid_sampler_1/grid_sampler_1.pdmodel"),
    std::string("grid_sampler_2/grid_sampler_2.pdmodel"),
    // std::string("grid_sampler_3/grid_sampler_3.pdmodel"),
    // std::string("grid_sampler_dyn/grid_sampler_dyn.pdmodel"),
    std::string("group_norm_1/group_norm_1.pdmodel"),
    std::string("group_norm_2/group_norm_2.pdmodel"),
    std::string("group_norm_3/group_norm_3.pdmodel"),
    std::string("hard_sigmoid/hard_sigmoid.pdmodel"),
    std::string("hard_swish/hard_swish.pdmodel"),
    std::string("index_select_axis_0/index_select_axis_0.pdmodel"),
    std::string("index_select_axis_1/index_select_axis_1.pdmodel"),
    std::string("index_select_axis_native_-1/index_select_axis_native_-1.pdmodel"),
    std::string("index_select_axis_native_-2/index_select_axis_native_-2.pdmodel"),
    std::string("layer_norm/layer_norm.pdmodel"),
    std::string("layer_norm_noall/layer_norm_noall.pdmodel"),
    std::string("layer_norm_noscale/layer_norm_noscale.pdmodel"),
    std::string("layer_norm_noshift/layer_norm_noshift.pdmodel"),
    std::string("leaky_relu/leaky_relu.pdmodel"),
    std::string("less_than_float32/less_than_float32.pdmodel"),
    std::string("less_than_int32/less_than_int32.pdmodel"),
    std::string("less_than_int64/less_than_int64.pdmodel"),
    std::string("linear_downsample_false_0/linear_downsample_false_0.pdmodel"),
    std::string("linear_downsample_false_1/linear_downsample_false_1.pdmodel"),
    std::string("linear_downsample_true_0/linear_downsample_true_0.pdmodel"),
    std::string("linear_upsample_false_0/linear_upsample_false_0.pdmodel"),
    std::string("linear_upsample_false_1/linear_upsample_false_1.pdmodel"),
    std::string("linear_upsample_scales/linear_upsample_scales.pdmodel"),
    std::string("linear_upsample_scales2/linear_upsample_scales2.pdmodel"),
    std::string("linear_upsample_true_0/linear_upsample_true_0.pdmodel"),
    std::string("linear_upsample_tensor_size/linear_upsample_tensor_size.pdmodel"),
    std::string("linspace_1/linspace_1.pdmodel"),
    std::string("linspace_2/linspace_2.pdmodel"),
    std::string("linspace_3/linspace_3.pdmodel"),
    std::string("log/log.pdmodel"),
    std::string("logical_and/logical_and.pdmodel"),
    std::string("logical_not/logical_not.pdmodel"),
    std::string("logical_or/logical_or.pdmodel"),
    std::string("logical_xor/logical_xor.pdmodel"),
    // 95436: sporadic failure
    std::string("loop/loop.pdmodel"),
    std::string("loop_dyn/loop_dyn.pdmodel"),
    std::string("loop_dyn_x/loop_dyn_x.pdmodel"),
    // std::string("loop_if/loop_if.pdmodel"),
    // std::string("loop_if_loop/loop_if_loop.pdmodel"),
    // std::string("loop_if_loop_if/loop_if_loop_if.pdmodel"),
    // std::string("loop_if_loop_complex/loop_if_loop_complex.pdmodel"),
    // disabed due to slice could not produce full dynamic shape
    // std::string("loop_if_tensor_array/loop_if_tensor_array.pdmodel"),
    // std::string("loop_x/loop_x.pdmodel"),
    std::string("loop_t/loop_t.pdmodel"),
    std::string("loop_tensor_array/loop_tensor_array.pdmodel"),
    std::string("matmul_xt/matmul_xt.pdmodel"),
    std::string("matmul_xt_yt/matmul_xt_yt.pdmodel"),
    std::string("matmul_yt/matmul_yt.pdmodel"),
    std::string("matmul_v2_1dx1d/matmul_v2_1dx1d.pdmodel"),
    std::string("matmul_v2_1dx2d/matmul_v2_1dx2d.pdmodel"),
    std::string("matmul_v2_2dx1d/matmul_v2_2dx1d.pdmodel"),
    std::string("matmul_v2_ndxmd/matmul_v2_ndxmd.pdmodel"),
    std::string("matmul_v2_xt/matmul_v2_xt.pdmodel"),
    std::string("matmul_v2_xt_yt/matmul_v2_xt_yt.pdmodel"),
    std::string("matmul_v2_yt/matmul_v2_yt.pdmodel"),
    std::string("matrix_nms_by_background/matrix_nms_by_background.pdmodel"),
    std::string("matrix_nms_by_keep_top_k/matrix_nms_by_keep_top_k.pdmodel"),
    std::string("matrix_nms_by_nms_top_k/matrix_nms_by_nms_top_k.pdmodel"),
    std::string("matrix_nms_by_post_threshold/matrix_nms_by_post_threshold.pdmodel"),
    std::string("matrix_nms_flipped_coordinates/matrix_nms_flipped_coordinates.pdmodel"),
    std::string("matrix_nms_gaussian/matrix_nms_gaussian.pdmodel"),
    std::string("matrix_nms_gaussian_sigma/matrix_nms_gaussian_sigma.pdmodel"),
    std::string("matrix_nms_identical_boxes/matrix_nms_identical_boxes.pdmodel"),
    std::string("matrix_nms_not_normalized/matrix_nms_not_normalized.pdmodel"),
    std::string("matrix_nms_not_return_indexed/matrix_nms_not_return_indexed.pdmodel"),
    std::string("matrix_nms_not_return_rois_num/matrix_nms_not_return_rois_num.pdmodel"),
    std::string("matrix_nms_not_return_rois_num_neither_index/matrix_nms_not_return_rois_num_neither_index.pdmodel"),
    std::string("matrix_nms_one_batch/matrix_nms_one_batch.pdmodel"),
    std::string("matrix_nms_single_box/matrix_nms_single_box.pdmodel"),
    std::string("matrix_nms_two_batches_two_classes/matrix_nms_two_batches_two_classes.pdmodel"),
    // std::string("matrix_nms_normalized_random/matrix_nms_normalized_random.pdmodel"),
    // std::string("matrix_nms_not_normalized_random/matrix_nms_not_normalized_random.pdmodel"),
    std::string("maxAdaptivePool2D_test1/maxAdaptivePool2D_test1.pdmodel"),
    std::string("maxPool_test1/maxPool_test1.pdmodel"),
    std::string("maxPool_test10/maxPool_test10.pdmodel"),
    std::string("maxPool_test11/maxPool_test11.pdmodel"),
    std::string("maxPool_test2/maxPool_test2.pdmodel"),
    std::string("maxPool_test3/maxPool_test3.pdmodel"),
    std::string("maxPool_test4/maxPool_test4.pdmodel"),
    std::string("maxPool_test5/maxPool_test5.pdmodel"),
    // maxPool_test6(nchw support is disabled now),
    std::string("maxPool_test7/maxPool_test7.pdmodel"),
    std::string("maxPool_test8/maxPool_test8.pdmodel"),
    std::string("maxPool_test9/maxPool_test9.pdmodel"),
    std::string("maxAdaptivePool3D_test1/maxAdaptivePool3D_test1.pdmodel"),
    std::string("maxAdaptivePool3D_test2/maxAdaptivePool3D_test2.pdmodel"),
    std::string("maxAdaptivePool3D_test3/maxAdaptivePool3D_test3.pdmodel"),
    std::string("maxAdaptivePool3D_test4/maxAdaptivePool3D_test4.pdmodel"),
    std::string("max3dPool_test1/max3dPool_test1.pdmodel"),
    std::string("max3dPool_test2/max3dPool_test2.pdmodel"),
    std::string("max3dPool_test3/max3dPool_test3.pdmodel"),
    std::string("max3dPool_test4/max3dPool_test4.pdmodel"),
    std::string("max3dPool_test5/max3dPool_test5.pdmodel"),
    std::string("max3dPool_test6/max3dPool_test6.pdmodel"),
    std::string("max3dPool_test7/max3dPool_test7.pdmodel"),
    std::string("max3dPool_test8/max3dPool_test8.pdmodel"),
    std::string("max3dPool_test9/max3dPool_test9.pdmodel"),
    std::string("max3dPool_test10/max3dPool_test10.pdmodel"),
    std::string("max3dRetureMask/max3dRetureMask.pdmodel"),
    std::string("meshgrid/meshgrid.pdmodel"),
    std::string("multiclass_nms_by_background/multiclass_nms_by_background.pdmodel"),
    std::string("multiclass_nms_by_class_id/multiclass_nms_by_class_id.pdmodel"),
    std::string("multiclass_nms_by_IOU/multiclass_nms_by_IOU.pdmodel"),
    std::string("multiclass_nms_by_IOU_and_scores/multiclass_nms_by_IOU_and_scores.pdmodel"),
    std::string("multiclass_nms_by_keep_top_k/multiclass_nms_by_keep_top_k.pdmodel"),
    std::string("multiclass_nms_by_nms_eta/multiclass_nms_by_nms_eta.pdmodel"),
    std::string("multiclass_nms_by_nms_top_k/multiclass_nms_by_nms_top_k.pdmodel"),
    std::string("multiclass_nms_flipped_coordinates/multiclass_nms_flipped_coordinates.pdmodel"),
    std::string("multiclass_nms_identical_boxes/multiclass_nms_identical_boxes.pdmodel"),
    // default
    std::string("multiclass_nms_lod_roisnum_multiple_images_default/"
                "multiclass_nms_lod_roisnum_multiple_images_default.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_multiple_images_0_default/"
                "multiclass_nms_lod_roisnum_multiple_images_0_default.pdmodel"),
    std::string(
        "multiclass_nms_lod_roisnum_single_image_default/multiclass_nms_lod_roisnum_single_image_default.pdmodel"),
    // background
    std::string("multiclass_nms_lod_roisnum_multiple_images_background/"
                "multiclass_nms_lod_roisnum_multiple_images_background.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_multiple_images_0_background/"
                "multiclass_nms_lod_roisnum_multiple_images_0_background.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_single_image_background/"
                "multiclass_nms_lod_roisnum_single_image_background.pdmodel"),
    // score_threshold
    std::string("multiclass_nms_lod_roisnum_multiple_images_score_threshold/"
                "multiclass_nms_lod_roisnum_multiple_images_score_threshold.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_multiple_images_0_score_threshold/"
                "multiclass_nms_lod_roisnum_multiple_images_0_score_threshold.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_single_image_score_threshold/"
                "multiclass_nms_lod_roisnum_single_image_score_threshold.pdmodel"),
    // nms_top_k
    std::string("multiclass_nms_lod_roisnum_multiple_images_nms_top_k/"
                "multiclass_nms_lod_roisnum_multiple_images_nms_top_k.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_multiple_images_0_nms_top_k/"
                "multiclass_nms_lod_roisnum_multiple_images_0_nms_top_k.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_single_image_nms_top_k/"
                "multiclass_nms_lod_roisnum_single_image_nms_top_k.pdmodel"),
    // keep_top_k
    std::string("multiclass_nms_lod_roisnum_multiple_images_keep_top_k/"
                "multiclass_nms_lod_roisnum_multiple_images_keep_top_k.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_multiple_images_0_keep_top_k/"
                "multiclass_nms_lod_roisnum_multiple_images_0_keep_top_k.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_single_image_keep_top_k/"
                "multiclass_nms_lod_roisnum_single_image_keep_top_k.pdmodel"),
    // normalized
    std::string("multiclass_nms_lod_roisnum_multiple_images_normalized/"
                "multiclass_nms_lod_roisnum_multiple_images_normalized.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_multiple_images_0_normalized/"
                "multiclass_nms_lod_roisnum_multiple_images_0_normalized.pdmodel"),
    std::string("multiclass_nms_lod_roisnum_single_image_normalized/"
                "multiclass_nms_lod_roisnum_single_image_normalized.pdmodel"),
    std::string("multiclass_nms_not_normalized/multiclass_nms_not_normalized.pdmodel"),
    std::string("multiclass_nms_not_return_indexed/multiclass_nms_not_return_indexed.pdmodel"),
    std::string("multiclass_nms_single_box/multiclass_nms_single_box.pdmodel"),
    std::string("multiclass_nms_two_batches_two_classes_by_class_id/"
                "multiclass_nms_two_batches_two_classes_by_class_id.pdmodel"),
    // std::string("multiclass_nms_normalized_random/multiclass_nms_normalized_random.pdmodel"),
    // std::string("multiclass_nms_not_normalized_random/multiclass_nms_not_normalized_random.pdmodel"),
    std::string("nearest_downsample_false_0/nearest_downsample_false_0.pdmodel"),
    std::string("nearest_downsample_false_1/nearest_downsample_false_1.pdmodel"),
    std::string("nearest_upsample_false_0/nearest_upsample_false_0.pdmodel"),
    std::string("nearest_upsample_false_1/nearest_upsample_false_1.pdmodel"),
    std::string("nearest_upsample_tensor_size/nearest_upsample_tensor_size.pdmodel"),
    std::string("not_equal_float32/not_equal_float32.pdmodel"),
    std::string("not_equal_int32/not_equal_int32.pdmodel"),
    std::string("not_equal_int64/not_equal_int64.pdmodel"),
    std::string("one_hot_v2_1/one_hot_v2_1.pdmodel"),
    std::string("one_hot_v2_2/one_hot_v2_2.pdmodel"),
    std::string("one_hot_v2_3/one_hot_v2_3.pdmodel"),
    std::string("p_norm1/p_norm1.pdmodel"),
    std::string("p_norm2/p_norm2.pdmodel"),
    std::string("p_norm3/p_norm3.pdmodel"),
    std::string("p_norm4/p_norm4.pdmodel"),
    std::string("p_norm5/p_norm5.pdmodel"),
    std::string("p_norm6/p_norm6.pdmodel"),
    std::string("p_norm7/p_norm7.pdmodel"),
    std::string("p_norm8/p_norm8.pdmodel"),
    std::string("pad3d_test1/pad3d_test1.pdmodel"),
    std::string("pad3d_test2/pad3d_test2.pdmodel"),
    std::string("pad3d_test3/pad3d_test3.pdmodel"),
    std::string("partial_concat_1/partial_concat_1.pdmodel"),
    std::string("partial_concat_2/partial_concat_2.pdmodel"),
    std::string("partial_concat_3/partial_concat_3.pdmodel"),
    std::string("partial_sum_1/partial_sum_1.pdmodel"),
    std::string("partial_sum_2/partial_sum_2.pdmodel"),
    std::string("partial_sum_3/partial_sum_3.pdmodel"),
    // pad3d_test4,
    std::string("pow_float32/pow_float32.pdmodel"),
    std::string("pow_int32/pow_int32.pdmodel"),
    std::string("pow_int64/pow_int64.pdmodel"),
    // pow_int64_out_of_range(out of range of OV int64),
    std::string("pow_y_tensor/pow_y_tensor.pdmodel"),
    std::string("prior_box_attrs_mmar_order_true/prior_box_attrs_mmar_order_true.pdmodel"),
    std::string("prior_box_default/prior_box_default.pdmodel"),
    std::string("prior_box_flip_clip_false/prior_box_flip_clip_false.pdmodel"),
    std::string("prior_box_max_sizes_none/prior_box_max_sizes_none.pdmodel"),
    std::string("range0/range0.pdmodel"),
    std::string("range1/range1.pdmodel"),
    std::string("range2/range2.pdmodel"),
    std::string("reduce_all_test_0/reduce_all_test_0.pdmodel"),
    std::string("reduce_all_test_1/reduce_all_test_1.pdmodel"),
    std::string("reduce_all_test_2/reduce_all_test_2.pdmodel"),
    std::string("reduce_all_test_3/reduce_all_test_3.pdmodel"),
    std::string("reduce_all_test_4/reduce_all_test_4.pdmodel"),
    std::string("reduce_all_test_5/reduce_all_test_5.pdmodel"),
    std::string("reduce_max_test_0/reduce_max_test_0.pdmodel"),
    std::string("reduce_max_test_1/reduce_max_test_1.pdmodel"),
    std::string("reduce_max_test_2/reduce_max_test_2.pdmodel"),
    std::string("reduce_max_test_3/reduce_max_test_3.pdmodel"),
    std::string("reduce_max_test_4/reduce_max_test_4.pdmodel"),
    std::string("reduce_max_test_5/reduce_max_test_5.pdmodel"),
    std::string("reduce_mean_test_0/reduce_mean_test_0.pdmodel"),
    std::string("reduce_mean_test_1/reduce_mean_test_1.pdmodel"),
    std::string("reduce_mean_test_2/reduce_mean_test_2.pdmodel"),
    std::string("reduce_mean_test_3/reduce_mean_test_3.pdmodel"),
    std::string("reduce_mean_test_4/reduce_mean_test_4.pdmodel"),
    std::string("reduce_mean_test_5/reduce_mean_test_5.pdmodel"),
    std::string("reduce_min_test_0/reduce_min_test_0.pdmodel"),
    std::string("reduce_min_test_1/reduce_min_test_1.pdmodel"),
    std::string("reduce_min_test_2/reduce_min_test_2.pdmodel"),
    std::string("reduce_min_test_3/reduce_min_test_3.pdmodel"),
    std::string("reduce_min_test_4/reduce_min_test_4.pdmodel"),
    std::string("reduce_min_test_5/reduce_min_test_5.pdmodel"),
    std::string("reduce_prod_test_0/reduce_prod_test_0.pdmodel"),
    std::string("reduce_prod_test_1/reduce_prod_test_1.pdmodel"),
    std::string("reduce_prod_test_2/reduce_prod_test_2.pdmodel"),
    std::string("reduce_prod_test_3/reduce_prod_test_3.pdmodel"),
    std::string("reduce_prod_test_4/reduce_prod_test_4.pdmodel"),
    std::string("reduce_prod_test_5/reduce_prod_test_5.pdmodel"),
    std::string("reduce_sum_test_0/reduce_sum_test_0.pdmodel"),
    std::string("reduce_sum_test_1/reduce_sum_test_1.pdmodel"),
    std::string("reduce_sum_test_2/reduce_sum_test_2.pdmodel"),
    std::string("reduce_sum_test_3/reduce_sum_test_3.pdmodel"),
    std::string("reduce_sum_test_4/reduce_sum_test_4.pdmodel"),
    std::string("reduce_sum_test_5/reduce_sum_test_5.pdmodel"),
    std::string("relu/relu.pdmodel"),
    std::string("relu6/relu6.pdmodel"),
    std::string("relu6_1/relu6_1.pdmodel"),
    std::string("reshape/reshape.pdmodel"),
    std::string("reshape_tensor/reshape_tensor.pdmodel"),
    std::string("reshape_tensor_list/reshape_tensor_list.pdmodel"),
    std::string("rnn_lstm_layer_1_bidirectional/rnn_lstm_layer_1_bidirectional.pdmodel"),
    std::string("rnn_lstm_layer_1_forward/rnn_lstm_layer_1_forward.pdmodel"),
    std::string("rnn_lstm_layer_2_bidirectional/rnn_lstm_layer_2_bidirectional.pdmodel"),
    std::string("rnn_lstm_layer_2_forward/rnn_lstm_layer_2_forward.pdmodel"),
    std::string("rnn_lstm_layer_1_forward_seq_len_4/rnn_lstm_layer_1_forward_seq_len_4.pdmodel"),
    std::string("rnn_lstm_layer_2_bidirectional_seq_len_4/rnn_lstm_layer_2_bidirectional_seq_len_4.pdmodel"),
    std::string("roi_align_test/roi_align_test.pdmodel"),
    std::string("roi_align_test2/roi_align_test2.pdmodel"),
    std::string("roll_test_0/roll_test_0.pdmodel"),
    std::string("roll_test_1/roll_test_1.pdmodel"),
    std::string("roll_test_2/roll_test_2.pdmodel"),
    std::string("roll_test_3/roll_test_3.pdmodel"),
    std::string("roll_test_4/roll_test_4.pdmodel"),
    std::string("round/round.pdmodel"),
    std::string("scale_bias_after_float32/scale_bias_after_float32.pdmodel"),
    std::string("scale_bias_after_int32/scale_bias_after_int32.pdmodel"),
    std::string("scale_bias_after_int64/scale_bias_after_int64.pdmodel"),
    std::string("scale_bias_before_float32/scale_bias_before_float32.pdmodel"),
    std::string("scale_bias_before_int32/scale_bias_before_int32.pdmodel"),
    std::string("scale_bias_before_int64/scale_bias_before_int64.pdmodel"),
    std::string("scale_tensor_bias_after/scale_tensor_bias_after.pdmodel"),
    std::string("scale_tensor_bias_before/scale_tensor_bias_before.pdmodel"),
    std::string("set_value1/set_value1.pdmodel"),
    std::string("set_value2/set_value2.pdmodel"),
    std::string("set_value3/set_value3.pdmodel"),
    std::string("set_value4/set_value4.pdmodel"),
    std::string("set_value5/set_value5.pdmodel"),
    // std::string("set_value6/set_value6.pdmodel"),
    // std::string("set_value7/set_value7.pdmodel"),
    // std::string("set_value8/set_value8.pdmodel"),
    // std::string("set_value_dynamic1/set_value_dynamic1.pdmodel"),
    std::string("set_value_dynamic2/set_value_dynamic2.pdmodel"),
    std::string("shape/shape.pdmodel"),
    std::string("share_data_test_0/share_data_test_0.pdmodel"),
    std::string("sigmoid/sigmoid.pdmodel"),
    std::string("silu_static_test1/silu_static_test1.pdmodel"),
    std::string("silu_static_test2/silu_static_test2.pdmodel"),
    std::string("silu_static_test3/silu_static_test3.pdmodel"),
    std::string("silu_static_test4/silu_static_test4.pdmodel"),
    std::string("silu_dynamic_test1/silu_dynamic_test1.pdmodel"),
    std::string("silu_dynamic_test2/silu_dynamic_test2.pdmodel"),
    std::string("silu_dynamic_test3/silu_dynamic_test3.pdmodel"),
    std::string("silu_dynamic_test4/silu_dynamic_test4.pdmodel"),
    std::string("sin/sin.pdmodel"),
    std::string("slice/slice.pdmodel"),
    std::string("slice_1d/slice_1d.pdmodel"),
    std::string("slice_decrease_axis/slice_decrease_axis.pdmodel"),
    std::string("slice_decrease_axis_all/slice_decrease_axis_all.pdmodel"),
    std::string("slice_reshape/slice_reshape.pdmodel"),
    std::string("softmax/softmax.pdmodel"),
    std::string("softmax_minus/softmax_minus.pdmodel"),
    std::string("softplus_default_params/softplus_default_params.pdmodel"),
    std::string("softshrink_default_params/softshrink_default_params.pdmodel"),
    std::string("softshrink_threshold_0.6/softshrink_threshold_0.6.pdmodel"),
    std::string("split_test1/split_test1.pdmodel"),
    std::string("split_test2/split_test2.pdmodel"),
    std::string("split_test3/split_test3.pdmodel"),
    std::string("split_test4/split_test4.pdmodel"),
    std::string("split_test5/split_test5.pdmodel"),
    std::string("split_test6/split_test6.pdmodel"),
    std::string("split_test_dim_int32/split_test_dim_int32.pdmodel"),
    std::string("split_test_dim_int64/split_test_dim_int64.pdmodel"),
    std::string("split_test_list/split_test_list.pdmodel"),
    std::string("split_test_list_tensor/split_test_list_tensor.pdmodel"),
    std::string("sqrt_float32/sqrt_float32.pdmodel"),
    std::string("squeeze/squeeze.pdmodel"),
    std::string("squeeze_null_axes/squeeze_null_axes.pdmodel"),
    std::string("stack_test_float32/stack_test_float32.pdmodel"),
    std::string("stack_test_int32/stack_test_int32.pdmodel"),
    std::string("stack_test_neg_axis/stack_test_neg_axis.pdmodel"),
    std::string("stack_test_none_axis/stack_test_none_axis.pdmodel"),
    std::string("strided_slice_input1_1/strided_slice_input1_1.pdmodel"),
    std::string("strided_slice_input1_2/strided_slice_input1_2.pdmodel"),
    std::string("strided_slice_input1_3/strided_slice_input1_3.pdmodel"),
    std::string("strided_slice_input1_4/strided_slice_input1_4.pdmodel"),
    std::string("strided_slice_input2_1/strided_slice_input2_1.pdmodel"),
    std::string("strided_slice_input2_2/strided_slice_input2_2.pdmodel"),
    std::string("strided_slice_input2_3/strided_slice_input2_3.pdmodel"),
    std::string("strided_slice_input3_1/strided_slice_input3_1.pdmodel"),
    std::string("strided_slice_input3_2/strided_slice_input3_2.pdmodel"),
    std::string("sum_1/sum_1.pdmodel"),
    std::string("sum_2/sum_2.pdmodel"),
    std::string("sum_3/sum_3.pdmodel"),
    std::string("sum_4/sum_4.pdmodel"),
    std::string("swish_default_params/swish_default_params.pdmodel"),
    std::string("swish_beta/swish_beta.pdmodel"),
    std::string("tanh/tanh.pdmodel"),
    std::string("tanh_shrink_1/tanh_shrink_1.pdmodel"),
    std::string("tanh_shrink_2/tanh_shrink_2.pdmodel"),
    std::string("tile_repeat_times_tensor/tile_repeat_times_tensor.pdmodel"),
    std::string("tile_list_float32/tile_list_float32.pdmodel"),
    std::string("tile_list_int32/tile_list_int32.pdmodel"),
    std::string("tile_list_int64/tile_list_int64.pdmodel"),
    std::string("tile_list_bool/tile_list_bool.pdmodel"),
    std::string("tile_tuple_float32/tile_tuple_float32.pdmodel"),
    std::string("tile_tuple_int32/tile_tuple_int32.pdmodel"),
    std::string("tile_tuple_int64/tile_tuple_int64.pdmodel"),
    std::string("tile_tuple_bool/tile_tuple_bool.pdmodel"),
    std::string("tile_tensor_list/tile_tensor_list.pdmodel"),
    std::string("tile_repeat_gt_x/tile_repeat_gt_x.pdmodel"),
    std::string("tile_repeat_lt_x/tile_repeat_lt_x.pdmodel"),
    std::string("top_k_v2_test_1/top_k_v2_test_1.pdmodel"),
    std::string("top_k_v2_test_2/top_k_v2_test_2.pdmodel"),
    std::string("top_k_v2_test_3/top_k_v2_test_3.pdmodel"),
    std::string("top_k_v2_test_4/top_k_v2_test_4.pdmodel"),
    std::string("top_k_v2_test_5/top_k_v2_test_5.pdmodel"),
    std::string("top_k_v2_test_6/top_k_v2_test_6.pdmodel"),
    std::string("triu/triu.pdmodel"),
    std::string("triu_1/triu_1.pdmodel"),
    std::string("triu_2/triu_2.pdmodel"),
    std::string("triu_3/triu_3.pdmodel"),
    std::string("triu_4/triu_4.pdmodel"),
    std::string("triu_int32/triu_int32.pdmodel"),
    std::string("triu_int64/triu_int64.pdmodel"),
    std::string("trilinear_downsample_false_0/trilinear_downsample_false_0.pdmodel"),
    std::string("trilinear_downsample_false_1/trilinear_downsample_false_1.pdmodel"),
    std::string("trilinear_downsample_true_0/trilinear_downsample_true_0.pdmodel"),
    std::string("trilinear_upsample_false_0/trilinear_upsample_false_0.pdmodel"),
    std::string("trilinear_upsample_false_1/trilinear_upsample_false_1.pdmodel"),
    std::string("trilinear_upsample_scales/trilinear_upsample_scales.pdmodel"),
    std::string("trilinear_upsample_scales2/trilinear_upsample_scales2.pdmodel"),
    std::string("trilinear_upsample_true_0/trilinear_upsample_true_0.pdmodel"),
    std::string("trilinear_upsample_tensor_size/trilinear_upsample_tensor_size.pdmodel"),
    std::string("tril/tril.pdmodel"),
    std::string("tril_1/tril_1.pdmodel"),
    std::string("tril_2/tril_2.pdmodel"),
    std::string("tril_3/tril_3.pdmodel"),
    std::string("tril_4/tril_4.pdmodel"),
    std::string("tril_int32/tril_int32.pdmodel"),
    std::string("tril_int64/tril_int64.pdmodel"),
    std::string("unsqueeze/unsqueeze.pdmodel"),
    std::string("unique/unique.pdmodel"),
    std::string("unique_ret_index/unique_ret_index.pdmodel"),
    std::string("unique_ret_inverse/unique_ret_inverse.pdmodel"),
    std::string("unique_ret_counts/unique_ret_counts.pdmodel"),
    std::string("unique_ret_index_inverse/unique_ret_index_inverse.pdmodel"),
    std::string("unique_ret_index_counts/unique_ret_index_counts.pdmodel"),
    std::string("unique_ret_inverse_counts/unique_ret_inverse_counts.pdmodel"),
    std::string("unique_ret_index_inverse_counts/unique_ret_index_inverse_counts.pdmodel"),
    std::string("unique_ret_index_axis/unique_ret_index_axis.pdmodel"),
    std::string("unique_ret_index_i32/unique_ret_index_i32.pdmodel"),
    std::string("unstack_1/unstack_1.pdmodel"),
    std::string("unstack_2/unstack_2.pdmodel"),
    std::string("unstack_3/unstack_3.pdmodel"),
    std::string("unstack_4/unstack_4.pdmodel"),
    std::string("unstack_5/unstack_5.pdmodel"),
    std::string("where_1/where_1.pdmodel"),
    std::string("where_2/where_2.pdmodel"),
    std::string("where_3/where_3.pdmodel"),
    std::string("where_index_1/where_index_1.pdmodel"),
    std::string("where_index_2/where_index_2.pdmodel"),
    std::string("where_index_3/where_index_3.pdmodel"),
    std::string("where_index_4/where_index_4.pdmodel"),
    std::string("where_index_5/where_index_5.pdmodel"),
    std::string("where_index_6/where_index_6.pdmodel"),
    // Temporily disable them until root caused to secure CI stable.
    // CVS-66703 to track this.
    // std::string("yolo_box_clip_box/yolo_box_clip_box.pdmodel"),
    // std::string("yolo_box_default/yolo_box_default.pdmodel"),
    // std::string("yolo_box_scale_xy/yolo_box_scale_xy.pdmodel"),
    std::string("yolo_box_uneven_wh/yolo_box_uneven_wh.pdmodel")};

INSTANTIATE_TEST_SUITE_P(PaddleFuzzyOpTest,
                         FrontEndFuzzyOpTest,
                         ::testing::Combine(::testing::Values(PADDLE_FE),
                                            ::testing::Values(std::string(TEST_PADDLE_MODELS_DIRNAME)),
                                            ::testing::ValuesIn(models)),
                         PaddleFuzzyOpTest::getTestCaseName);
