/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.*/
// Modification Copyright (C) 2018-2025 Intel Corporation

syntax = "proto3";

package tensorflow;

import "ov_tensorflow/graph.proto";
import "ov_tensorflow/tensor_shape.proto";
import "ov_tensorflow/types.proto";

option cc_enable_arenas = true;
option java_outer_classname = "RemoteFusedGraphExecuteInfoProto";
option java_multiple_files = true;
option java_package = "org.tensorflow.framework";
option go_package = "github.com/tensorflow/tensorflow/tensorflow/go/core/framework/remote_fused_graph_execute_info_go_proto";

// Protocol buffer representing a handle to a tensorflow resource. Handles are
// not valid across executions, but can be serialized back and forth from within
// a single run.
message RemoteFusedGraphExecuteInfo {
  message TensorShapeTypeProto {
    DataType dtype = 1;
    TensorShapeProto shape = 2;
  }

  // Definition of remote graph
  GraphDef remote_graph = 1;

  // Remote fused graph input node name
  repeated string graph_input_node_name = 2;

  // Remote fused graph output node name
  repeated string graph_output_node_name = 3;

  // Executor's name
  string executor_name = 4;

  // Optional: Parameters given to the executor
  bytes serialized_executor_parameters = 5;

  // Optional: Default graph input tensor shape used to allocate memory
  // before executing op
  repeated TensorShapeTypeProto default_graph_input_tensor_shape = 6;

  // Optional: Default graph input tensor shape used to allocate memory
  // before executing op
  // TODO(satok): Remote output tensor shape once shape information is stored
  // in NodeDef
  repeated TensorShapeTypeProto default_graph_output_tensor_shape = 7;
}
