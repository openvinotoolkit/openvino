// Copyright (C) 2018-2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0
//

#pragma once

#include <memory>

#include "openvino/core/node.hpp"
#include "openvino/core/node_vector.hpp"
#include "openvino/op/op.hpp"

namespace ov::snippets::op {

/**
 * @interface Nop
 * @brief Generated by Canonicalization and represents not-an-operation
 * @ingroup snippets
 */
class Nop : public ov::op::Op {
public:
    OPENVINO_OP("Nop", "SnippetsOpset");

    Nop(const OutputVector& arguments, const OutputVector& results);
    Nop() = default;

    std::shared_ptr<Node> clone_with_new_inputs([[maybe_unused]] const OutputVector& inputs) const override {
        return std::make_shared<Nop>();
    }
};

}  // namespace ov::snippets::op
