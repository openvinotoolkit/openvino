[project]
name = "openvino"
dynamic = ["version", "entry-points", "scripts", "optional-dependencies"]
description = "OpenVINO(TM) Runtime"
readme = {file = "README.md", content-type="text/markdown"}
license = {text = "OSI Approved :: Apache Software License"}
authors = [
    { name = "OpenVINO Developers", email = "openvino@intel.com" },
]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
requires-python = ">=3.10"

dependencies = [
    "numpy>=1.16.6,<2.3.0",
    "openvino-telemetry>=2023.2.1",
    "packaging"
]

[build-system]
requires = [
    "setuptools>=70,<=80.9.0", 
    "wheel<=0.45.1",
    "cmake<=4.1.2", 
    "patchelf<=0.17.2.2; sys_platform == 'linux' and platform_machine == 'x86_64'"
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
license-files = [
    "LICENSE",
    "licensing/runtime-third-party-programs.txt",
    "licensing/onetbb_third-party-programs.txt",
    "licensing/onednn_third-party-programs.txt",
]
[tool.setuptools.packages.find]
where = ["./src/bindings/python"]
include = ["pyopenvino"] 

[tool.black]
line-length = 160
include = '\.pyi?$'

[tool.pyright]
include = ["src/bindings/python/src"]
exclude = ["src/bindings/python/src/pyopenvino"]
ignore = [
    "**/ops.py",
    "**/utils/data_helpers/data_dispatcher.py",
    "**/utils/types.py",
    "**/utils/decorators.py",
    "**/frontend/frontend.py",
    "**/_ov_api.py",
    "**/_op_base.py",
    "**/utils/node_factory.py",
    "**/frontend/tensorflow",
    "**/frontend/pytorch",
    "**/frontend/jax"
]
reportInvalidTypeForm = false
reportMissingModuleSource = false
reportFunctionMemberAccess = false
reportAttributeAccessIssue = false
reportMissingImports = false
reportIncompatibleMethodOverride = false

[dependency-groups]
cpu_tools = [
    "numpy>=1.16.6,<2.4.0",
    "argparse",
    "matplotlib~=3.3.4; python_version<'3.7'",
    "matplotlib>=3.3.4, <3.6; python_version>='3.7'",
    "pandas>=2.0",
]

dev_wheel = [
    "setuptools>=70.1,<80.10",
    "wheel>=0.38.1",
    "build<1.4",
    "patchelf<=0.17.2.4",
]

docs = [
    "alabaster==0.7.16",
    "atomicwrites==1.4.1",
    "attrs==25.4.0",
    "Babel==2.17.0",
    "beautifulsoup4==4.14.2",
    "breathe==4.36.0",
    "certifi==2025.10.5",
    "colorama==0.4.6",
    "Cython==3.1.4",
    "docutils==0.21.2",
    "idna==3.11",
    "imagesize==1.4.1",
    "importlib-metadata>=4.8.0,<9.0.0",
    "iniconfig==2.1.0",
    "ipython==8.18.1",
    "Jinja2==3.1.6",
    "jsonschema==4.25.1",
    "lxml>=4.9.2",
    "MarkupSafe==3.0.3",
    "mistune==3.1.4",
    "myst-parser==3.0.1; python_version < \"3.10\"",
    "myst-parser==4.0.1; python_version >= \"3.10\"",
    "packaging>=22.0",
    "pluggy==1.6.0",
    "pydata-sphinx-theme==0.14.4",
    "pygments>=2.8.1",
    "pyparsing==3.2.5",
    "pytest>=5.0,<8.5",
    "pytest-html==4.1.1",
    "pytest-metadata==1.11.0; python_version < \"3.10\"",
    "pytest-metadata==3.1.1; python_version >= \"3.10\"",
    "py>=1.11.0",
    "pytz==2022.7",
    "pyyaml==6.0.3",
    "requests==2.32.5",
    "six==1.17.0",
    "snowballstemmer==3.0.1",
    "soupsieve==2.8",
    "sphinx==7.4.7; python_version >= \"3.10\"",
    "sphinx==7.3.7; python_version < \"3.10\"",
    "sphinx-copybutton==0.5.2",
    "sphinx-design==0.6.1",
    "sphinx-inline-tabs==2023.4.21",
    "sphinx-sitemap==2.6.0",
    "sphinxcontrib-applehelp==2.0.0",
    "sphinxcontrib-devhelp==2.0.0",
    "sphinxcontrib-htmlhelp==2.1.0",
    "sphinxcontrib-jsmath==1.0.1",
    "sphinxcontrib-qthelp==2.0.0",
    "sphinxcontrib-serializinghtml==2.0.0",
    "toml==0.10.2",
    "urllib3==2.5.0",
    "zipp==3.23.0",
]

runtime = [
    "numpy>=1.16.6,<2.4.0",
    "openvino-telemetry>=2023.2.1",
    "packaging>=22.0",
]

samples_bert_benchmark = [
    "datasets>=2.13",
    "transformers[onnx]; python_version < \"3.11\"",
    "torch",
]

samples_classification = [
    "opencv-python>=4.5",
]

samples_hello_classification = [
    "opencv-python>=4.5",
]

samples_hello_reshape_ssd = [
    "opencv-python>=4.5",
]

tests_conditional_compilation = [
    "numpy>=1.16.6,<2.4.0",
    "protobuf>=3.18.1,<7.0.0",
    "pytest>=5.0,<8.5",
    "pytest-dependency==0.6.0",
    "pytest-html==4.1.1",
    "py",
    "PyYAML",
]

tests_e2e = [
    "py-cpuinfo==9.0.0",
    "scipy>=1.5.4,<1.17",
    "opencv-python>=4.5; sys_platform != \"darwin\"",
    "opencv-python==4.12.0.88; sys_platform == \"darwin\"",
    "unittest-xml-reporting==3.2.0",
    "lpips==0.1.4",
    "scikit-image>=0.17.2; python_version < '3.13'",
    "scikit-image>=0.25.0; python_version >= '3.13'",
    "tabulate==0.9.0",
    "pytest>=5.0,<8.5",
    "pytest-cov==7.0.0",
    "pytest-html==4.1.1",
    "pytest-json-report==1.5.0",
    "pytest-xdist==3.8.0",
    "pytest-timeout==2.4.0",
    "openvino-dev",
    "distro==1.9.0",
    "pyyaml==6.0.3",
    "jsonschema==4.25.0",
    "omegaconf>=2.1,<2.4",
    "pycocotools>=2.0.6",
    "pretrainedmodels==0.7.4",
    "timm>=0.9.2",
    "deepctr-torch",
    "numpy>=1.16.6,<2.4.0",
    "tensorflow-hub",
]

tests_layer = [
    "numpy>=1.16.6,<2.4.0",
    "onnxruntime>=1.18.0,<=1.19.2; python_version <= '3.9'",
    "onnxruntime>=1.18.0; python_version >= '3.10'",
    "requests",
    "torch",
    "torchvision; platform_machine == 'arm64' and python_version >= '3.9'",
    "torchvision; platform_machine != 'arm64'",
    "sympy>=1.10",
    "transformers",
    "packaging>=22.0",
    "pillow",
    "pytest>=5.0,<8.5",
    "defusedxml",
    "tensorflow>=1.15.5,<2.21.0",
    "tensorflow-addons; python_version <= '3.10'",
]

tests_llm = [
    "optimum-intel",
    "nncf",
    "whowhatbench @ git+https://github.com/openvinotoolkit/openvino.genai.git#subdirectory=tools/who_what_benchmark",
    "pytest>=5.0,<8.5",
]

tests_model_hub_performance = [
    "numpy>=1.16.6,<2.4.0",
    "pytest>=5.0,<8.5",
    "pytest-html==4.1.1",
    "tensorflow-hub",
    "py",
]

tests_model_hub_tensorflow = [
    "numpy>=1.16.6,<2.4.0",
    "pytest>=5.0,<8.5",
    "pytest-html==4.1.1",
    "tensorflow>=1.15.5,<2.21.0",
    "tensorflow-hub",
    "tensorflow-text",
    "transformers",
    "tf-sentence-transformers",
]

tests_onnx_frontend = [
    "numpy>=1.16.6,<2.4.0",
    "protobuf>=3.18.1,<7.0.0",
    "docopt~=0.6.2",
    "onnx==1.17.0",
    "pytest>=5.0,<8.5",
]

tests_paddle_frontend = [
    "protobuf>=3.18.1,<7.0.0",
    "numpy>=1.16.6,<2.4.0",
    "paddlepaddle==3.0.0",
]

tests_pyapi = [
    "numpy>=1.16.6,<2.4.0",
    "bandit",
    "black",
    "flake8<=7.3.0",
    "flake8-annotations-complexity<=0.1.0",
    "flake8-broken-line<=1.0.0",
    "flake8-bugbear<=24.12.12",
    "flake8-class-attributes-order<=0.3.0",
    "flake8-comprehensions<=3.16.0",
    "flake8-debugger<=4.1.2",
    "flake8-docstrings<=1.7.0",
    "flake8-eradicate<=1.5.0",
    "flake8-executable<=2.1.3",
    "flake8-expression-complexity<=0.0.11",
    "flake8-pep585<=0.1.7",
    "flake8-print<=5.0.0",
    "flake8-pytest-style<=2.1.0",
    "flake8-rst-docstrings<=0.4.0",
    "pygments>=2.8.1",
    "flake8-string-format<=0.3.0",
    "flake8-variables-names<=0.0.6",
    "flake8_builtins<3.1.0",
    "flake8_coding<=1.3.2",
    "flake8_pep3101<=2.1.0",
    "flake8_quotes<=3.4.0",
    "mypy",
    "Pep8-naming",
    "pillow",
    "pydocstyle",
    "pytest-forked; sys_platform != 'win32'",
    "pytest-xdist",
    "pytest-html==4.1.1",
    "pytest>=5.0,<8.5",
    "radon",
    "retrying",
    "tox",
    "types-setuptools",
    "wheel>=0.38.1",
    "pybind11-stubgen<2.6",
    "pyright<=1.1.406",
]

tests_samples = [
    "numpy>=1.16.6,<2.4.0",
    "opencv-python-headless",
    "requests",
    "pytest>=5.0,<8.5",
    "pytest-xdist",
    "pyyaml",
]

tests_stress = [
    "pymongo",
    "Jinja2",
    "PyYAML",
    "pandas",
    "h5py>=3.1.0,<3.15.0",
    "scipy",
    "defusedxml",
]

tests_tensorflow_frontend = [
    "numpy>=1.16.6,<2.4.0",
    "h5py>=3.1.0,<3.15.0",
    "tensorflow>=1.15.5,<2.21.0",
]

tests_tensorflow_lite_frontend = [
    "numpy>=1.16.6,<2.4.0",
    "tensorflow>=1.15.5,<2.21.0",
]

tests_time = [
    "PyYAML",
    "distro",
]

tests_time_runner = [
    "numpy>=1.16.6,<2.4.0",
    "pytest>=5.0,<8.5",
    "py",
    "attrs",
    "PyYAML",
    "jsonschema",
    "distro",
    "pymongo",
    "pytest-html==4.1.1",
    "pytest-timeout==2.4.0",
]

tests_utils_layer_summary = [
    "jinja2==3.1.6",
    "defusedxml>=0.7.1",
    "openpyxl==3.0.10",
]

torchvision_preprocessing = [
    "networkx<=3.2.1; python_version <= '3.9'",
    "torch>=2.7.0",
    "torchvision",
    "pillow>=9.0",
    "onnxscript",
]
